http.port=8081
logging.level.org.springframework.web: DEBUG
logging.level.org.springframework= DEBUG
#logging.level.root= ERROR
#spring.mvc.log-request-details=true

#kafka dependency
spring.kafka.bootstrap-servers=kafka-server-1:29092, kafka-server-3:39092
spring.kafka.consumer.group-id=group-1
stock.topic.name = stock-change

#postgres dependency
spring.datasource.url=jdbc:postgresql://postgres:5432/stockMarket
spring.datasource.username=priyanka
spring.datasource.password=priyanka9167
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= create

data.host = http://node_app:3000

#batch processing setting jdbc
spring.jpa.properties.hibernate.jdbc.batch_size = 20
database.batchSize = 20
spring.jpa.properties.hibernate.order_updates = true

#security
security.firebase-props.database-url:https://trading-6acb7-default-rtdb.firebaseio.com/
security.firebase-props.enable-strict-server-session = false
security.firebase-props.enable-check-sesion-revoked = false
security.firebase-props.enable-logout-everywhere = false
security.session-expiry-in-days = 5
security.cookie-props.max-age-in-minutes = 7200
security.cookie-props.http-only = true
security.cookie-props.secure = true
security.cookie-props.path = /
security.allow-credentials=true
security.allowed-origins= http://node_app:3000, https://boilerplate-b7b87.web.app/
security.allowed-method=GET, POST, PUT, PATCH, DELETE, OPTIONS
security.allowed-headers  = Authorization, Origin, Content-Type, Accept, Accept-Encoding, Accept-Language, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Access-Control-Request-Method, X-Requested-With, X-Auth-Token, X-Xsrf-Token, Cache-Control, Id-Token
security.allowed-public-apis  = /favicon.ico, /session/login, /public/**, /session/signup, /session/send
security.exposed-headers  = X-Xsrf-Token




